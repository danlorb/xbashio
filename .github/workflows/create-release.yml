name: create new release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    name: create release job
    runs-on: ubuntu-latest
    env:
      IS_PRERELEASE: ${{ contains(github.event.release.tag_name, 'next') }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: set env vars from envrionment
        run: |
          echo "GITHUB_SERVER_URL=$GITHUB_SERVER_URL" >> $GITHUB_ENV

      - name: create hash
        uses: actions/go-hashfiles@v0.0.1
        id: get-hash
        with:
          patterns: |-
            CHANGELOG.md

      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: npm install

      - name: create xbashio package
        run: npm run package

      - name: create release for gitea
        if: ${{ steps.get-hash.outputs.hash != '' && env.GITHUB_SERVER_URL != 'https://github.com' }}
        uses: akkuman/gitea-release-action@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: ${{ env.IS_PRERELEASE }}

      - name: create release for github
        if: ${{ steps.get-hash.outputs.hash != '' && env.GITHUB_SERVER_URL == 'https://github.com' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: ${{ env.IS_PRERELEASE }}

